void glue_ide_ioport_read(uint32_t addr, const char *reg, uint32_t val, void *bus, void *s);
void glue_ide_ioport_write(uint32_t addr, const char *reg, uint32_t val, void *bus, void *s);
void glue_ide_status_read(uint32_t addr, uint32_t val, void *bus, void *s);
void glue_ide_ctrl_write(uint32_t addr, uint32_t val, void *bus);
void glue_ide_data_readw(uint32_t addr, uint32_t val, void *bus, void *s);
void glue_ide_data_writew(uint32_t addr, uint32_t val, void *bus, void *s);
void glue_ide_data_readl(uint32_t addr, uint32_t val, void *bus, void *s);
void glue_ide_data_writel(uint32_t addr, uint32_t val, void *bus, void *s);
void glue_ide_exec_cmd(void *bus, void *state, uint32_t cmd);
void glue_ide_cancel_dma_sync_buffered(void *fn, void *req);
void glue_ide_cancel_dma_sync_remaining(void);
void glue_ide_sector_read(int64_t sector_num, int nsectors);
void glue_ide_sector_write(int64_t sector_num, int nsectors);
void glue_ide_reset(void *s);
void glue_ide_bus_reset_aio(void);
void glue_ide_dma_cb(void *s, int64_t sector_num, int n, const char *dma);
void glue_bmdma_read_cmd646(uint64_t addr, uint32_t val);
void glue_bmdma_write_cmd646(uint64_t addr, uint64_t val);
void glue_bmdma_reset(void);
void glue_bmdma_cmd_writeb(uint32_t val);
void glue_bmdma_addr_read(uint64_t data);
void glue_bmdma_addr_write(uint64_t data);
void glue_bmdma_read(uint64_t addr, uint8_t val);
void glue_bmdma_write(uint64_t addr, uint64_t val);
void glue_sii3112_read(int size, uint64_t addr, uint64_t val);
void glue_sii3112_write(int size, uint64_t addr, uint64_t val);
void glue_sii3112_set_irq(int channel, int level);
void glue_bmdma_read_via(uint64_t addr, uint32_t val);
void glue_bmdma_write_via(uint64_t addr, uint64_t val);
void glue_cd_read_sector_sync(int lba);
void glue_cd_read_sector_cb(int lba, int ret);
void glue_cd_read_sector(int lba);
void glue_ide_atapi_cmd_error(void *s, int sense_key, int asc);
void glue_ide_atapi_cmd_reply_end(void *s, int tx_size, int elem_tx_size, int32_t index);
void glue_ide_atapi_cmd_reply_end_eot(void *s, int status);
void glue_ide_atapi_cmd_reply_end_bcl(void *s, int bcl);
void glue_ide_atapi_cmd_reply_end_new(void *s, int status);
void glue_ide_atapi_cmd_check_status(void *s);
void glue_ide_atapi_cmd_read(void *s, const char *method, int lba, int nb_sectors);
void glue_ide_atapi_cmd(void *s, uint8_t cmd);
void glue_ide_atapi_cmd_read_dma_cb_aio(void *s, int lba, int n);
void glue_ide_atapi_cmd_packet(void *s, uint16_t limit, const char *packet);
void glue_ahci_port_read(void *s, int port, const char *reg, int offset, uint32_t ret);
void glue_ahci_port_read_default(void *s, int port, const char *reg, int offset);
void glue_ahci_irq_raise(void *s);
void glue_ahci_irq_lower(void *s);
void glue_ahci_check_irq(void *s, uint32_t old, uint32_t new);
void glue_ahci_trigger_irq(void *s, int port, const char *name, uint32_t val, uint32_t old, uint32_t new, uint32_t effective);
void glue_ahci_port_write(void *s, int port, const char *reg, int offset, uint32_t val);
void glue_ahci_port_write_unimpl(void *s, int port, const char *reg, int offset, uint32_t val);
void glue_ahci_mem_read_32(void *s, uint64_t addr, uint32_t val);
void glue_ahci_mem_read_32_default(void *s, uint64_t addr, uint32_t val);
void glue_ahci_mem_read_32_host(void *s, const char *reg, uint64_t addr, uint32_t val);
void glue_ahci_mem_read_32_host_default(void *s, const char *reg, uint64_t addr);
void glue_ahci_mem_read(void *s, unsigned size, uint64_t addr, uint64_t val);
void glue_ahci_mem_write(void *s, unsigned size, uint64_t addr, uint64_t val);
void glue_ahci_mem_write_host_unimpl(void *s, unsigned size, const char *reg, uint64_t addr);
void glue_ahci_mem_write_host(void *s, unsigned size, const char *reg, uint64_t addr, uint64_t val);
void glue_ahci_mem_write_unimpl(void *s, unsigned size, uint64_t addr, uint64_t val);
void glue_ahci_set_signature(void *s, int port, uint8_t nsector, uint8_t sector, uint8_t lcyl, uint8_t hcyl, uint32_t sig);
void glue_ahci_reset_port(void *s, int port);
void glue_ahci_unmap_fis_address_null(void *s, int port);
void glue_ahci_unmap_clb_address_null(void *s, int port);
void glue_ahci_populate_sglist(void *s, int port);
void glue_ahci_populate_sglist_no_prdtl(void *s, int port, uint16_t opts);
void glue_ahci_populate_sglist_no_map(void *s, int port);
void glue_ahci_populate_sglist_short_map(void *s, int port);
void glue_ahci_populate_sglist_bad_offset(void *s, int port, int off_idx, int64_t off_pos);
void glue_ncq_finish(void *s, int port, uint8_t tag);
void glue_execute_ncq_command_read(void *s, int port, uint8_t tag, int count, int64_t lba);
void glue_execute_ncq_command_unsup(void *s, int port, uint8_t tag, uint8_t cmd);
void glue_process_ncq_command_mismatch(void *s, int port, uint8_t tag, uint8_t slot);
void glue_process_ncq_command_aux(void *s, int port, uint8_t tag);
void glue_process_ncq_command_prioicc(void *s, int port, uint8_t tag);
void glue_process_ncq_command_fua(void *s, int port, uint8_t tag);
void glue_process_ncq_command_rarc(void *s, int port, uint8_t tag);
void glue_process_ncq_command_large(void *s, int port, uint8_t tag, size_t prdtl, size_t size);
void glue_process_ncq_command(void *s, int port, uint8_t tag, uint8_t cmd, uint64_t lba, uint64_t end);
void glue_handle_reg_h2d_fis_pmp(void *s, int port, char b0, char b1, char b2);
void glue_handle_reg_h2d_fis_res(void *s, int port, char b0, char b1, char b2);
void glue_handle_cmd_busy(void *s, int port);
void glue_handle_cmd_nolist(void *s, int port);
void glue_handle_cmd_badport(void *s, int port);
void glue_handle_cmd_badfis(void *s, int port);
void glue_handle_cmd_badmap(void *s, int port, uint64_t len);
void glue_handle_cmd_unhandled_fis(void *s, int port, uint8_t b0, uint8_t b1, uint8_t b2);
void glue_ahci_pio_transfer(void *s, int port, const char *rw, uint32_t size, const char *tgt, const char *sgl);
void glue_ahci_start_dma(void *s, int port);
void glue_ahci_dma_prepare_buf(void *s, int port, int32_t io_buffer_size, int32_t limit);
void glue_ahci_dma_prepare_buf_fail(void *s, int port);
void glue_ahci_dma_rw_buf(void *s, int port, int l);
void glue_ahci_cmd_done(void *s, int port);
void glue_ahci_reset(void *s);
void glue_handle_reg_h2d_fis_dump(void *s, int port, const char *fis);
void glue_handle_cmd_fis_dump(void *s, int port, const char *fis);
void glue_allwinner_ahci_mem_read(void *s, void *a, uint64_t addr, uint64_t val, unsigned size);
void glue_allwinner_ahci_mem_write(void *s, void *a, uint64_t addr, uint64_t val, unsigned size);
