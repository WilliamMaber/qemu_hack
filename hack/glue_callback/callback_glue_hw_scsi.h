void glue_scsi_req_alloc(int target, int lun, int tag);
void glue_scsi_req_cancel(int target, int lun, int tag);
void glue_scsi_req_data(int target, int lun, int tag, int len);
void glue_scsi_req_data_canceled(int target, int lun, int tag, int len);
void glue_scsi_req_dequeue(int target, int lun, int tag);
void glue_scsi_req_continue(int target, int lun, int tag);
void glue_scsi_req_continue_canceled(int target, int lun, int tag);
void glue_scsi_req_parsed(int target, int lun, int tag, int cmd, int mode, int xfer);
void glue_scsi_req_parsed_lba(int target, int lun, int tag, int cmd, uint64_t lba);
void glue_scsi_req_parse_bad(int target, int lun, int tag, int cmd);
void glue_scsi_req_build_sense(int target, int lun, int tag, int key, int asc, int ascq);
void glue_scsi_device_set_ua(int target, int lun, int key, int asc, int ascq);
void glue_scsi_report_luns(int target, int lun, int tag);
void glue_scsi_inquiry(int target, int lun, int tag, int cdb1, int cdb2);
void glue_scsi_test_unit_ready(int target, int lun, int tag);
void glue_scsi_request_sense(int target, int lun, int tag);
void glue_mptsas_command_complete(void *dev, uint32_t ctx, uint32_t status, uint32_t resid);
void glue_mptsas_diag_read(void *dev, uint32_t addr, uint32_t val);
void glue_mptsas_diag_write(void *dev, uint32_t addr, uint32_t val);
void glue_mptsas_irq_intx(void *dev, int level);
void glue_mptsas_irq_msi(void *dev);
void glue_mptsas_mmio_read(void *dev, uint32_t addr, uint32_t val);
void glue_mptsas_mmio_unhandled_read(void *dev, uint32_t addr);
void glue_mptsas_mmio_unhandled_write(void *dev, uint32_t addr, uint32_t val);
void glue_mptsas_mmio_write(void *dev, uint32_t addr, uint32_t val);
void glue_mptsas_process_message(void *dev, int msg, uint32_t ctx);
void glue_mptsas_process_scsi_io_request(void *dev, int bus, int target, int lun, uint64_t len);
void glue_mptsas_reset(void *dev);
void glue_mptsas_scsi_overflow(void *dev, uint32_t ctx, uint64_t req, uint64_t found);
void glue_mptsas_sgl_overflow(void *dev, uint32_t ctx, uint64_t req, uint64_t found);
void glue_mptsas_unhandled_cmd(void *dev, uint32_t ctx, uint8_t msg_cmd);
void glue_mptsas_unhandled_doorbell_cmd(void *dev, int cmd);
void glue_mptsas_config_sas_device(void *dev, int address, int port, int phy_handle, int dev_handle, int page);
void glue_mptsas_config_sas_phy(void *dev, int address, int port, int phy_handle, int dev_handle, int page);
void glue_megasas_init_firmware(uint64_t pa);
void glue_megasas_init_queue(uint64_t queue_pa, int queue_len, uint32_t head, uint32_t tail, uint32_t flags);
void glue_megasas_initq_map_failed(int frame);
void glue_megasas_initq_mapped(uint64_t pa);
void glue_megasas_initq_mismatch(int queue_len, int fw_cmds);
void glue_megasas_qf_mapped(unsigned int index);
void glue_megasas_qf_new(unsigned int index, uint64_t frame);
void glue_megasas_qf_busy(unsigned long pa);
void glue_megasas_qf_enqueue(unsigned int index, unsigned int count, uint64_t context, uint32_t head, uint32_t tail, unsigned int busy);
void glue_megasas_qf_update(uint32_t head, uint32_t tail, unsigned int busy);
void glue_megasas_qf_map_failed(int cmd, unsigned long frame);
void glue_megasas_qf_complete_noirq(uint64_t context);
void glue_megasas_qf_complete(uint64_t context, uint32_t head, uint32_t tail, int busy);
void glue_megasas_frame_busy(uint64_t addr);
void glue_megasas_unhandled_frame_cmd(int cmd, uint8_t frame_cmd);
void glue_megasas_handle_scsi(const char *frame, int bus, int dev, int lun, void *sdev, unsigned long size);
void glue_megasas_scsi_target_not_present(const char *frame, int bus, int dev, int lun);
void glue_megasas_scsi_invalid_cdb_len(const char *frame, int bus, int dev, int lun, int len);
void glue_megasas_iov_read_overflow(int cmd, int bytes, int len);
void glue_megasas_iov_write_overflow(int cmd, int bytes, int len);
void glue_megasas_iov_read_underflow(int cmd, int bytes, int len);
void glue_megasas_iov_write_underflow(int cmd, int bytes, int len);
void glue_megasas_scsi_req_alloc_failed(const char *frame, int dev, int lun);
void glue_megasas_scsi_read_start(int cmd, int len);
void glue_megasas_scsi_write_start(int cmd, int len);
void glue_megasas_scsi_nodata(int cmd);
void glue_megasas_scsi_complete(int cmd, uint32_t status, int len, int xfer);
void glue_megasas_command_complete(int cmd, uint32_t status, uint32_t resid);
void glue_megasas_handle_io(int cmd, const char *frame, int dev, int lun, unsigned long lba, unsigned long count);
void glue_megasas_io_target_not_present(int cmd, const char *frame, int dev, int lun);
void glue_megasas_io_read_start(int cmd, unsigned long lba, unsigned long count, unsigned long len);
void glue_megasas_io_write_start(int cmd, unsigned long lba, unsigned long count, unsigned long len);
void glue_megasas_io_complete(int cmd, uint32_t len);
void glue_megasas_iovec_sgl_overflow(int cmd, int index, int limit);
void glue_megasas_iovec_sgl_underflow(int cmd, int index);
void glue_megasas_iovec_sgl_invalid(int cmd, int index, uint64_t pa, uint32_t len);
void glue_megasas_iovec_overflow(int cmd, int len, int limit);
void glue_megasas_iovec_underflow(int cmd, int len, int limit);
void glue_megasas_handle_dcmd(int cmd, int opcode);
void glue_megasas_finish_dcmd(int cmd, int size);
void glue_megasas_dcmd_req_alloc_failed(int cmd, const char *desc);
void glue_megasas_dcmd_internal_submit(int cmd, const char *desc, int dev);
void glue_megasas_dcmd_internal_finish(int cmd, int opcode, int lun);
void glue_megasas_dcmd_internal_invalid(int cmd, int opcode);
void glue_megasas_dcmd_unhandled(int cmd, int opcode, int len);
void glue_megasas_dcmd_zero_sge(int cmd);
void glue_megasas_dcmd_invalid_sge(int cmd, int count);
void glue_megasas_dcmd_invalid_xfer_len(int cmd, unsigned long size, unsigned long max);
void glue_megasas_dcmd_enter(int cmd, const char *dcmd, int len);
void glue_megasas_dcmd_dummy(int cmd, unsigned long size);
void glue_megasas_dcmd_set_fw_time(int cmd, unsigned long time);
void glue_megasas_dcmd_pd_get_list(int cmd, int num, int max, int offset);
void glue_megasas_dcmd_ld_get_list(int cmd, int num, int max);
void glue_megasas_dcmd_ld_get_info(int cmd, int ld_id);
void glue_megasas_dcmd_ld_list_query(int cmd, int flags);
void glue_megasas_dcmd_pd_get_info(int cmd, int pd_id);
void glue_megasas_dcmd_pd_list_query(int cmd, int flags);
void glue_megasas_dcmd_reset_ld(int cmd, int target_id);
void glue_megasas_dcmd_unsupported(int cmd, unsigned long size);
void glue_megasas_abort_frame(int cmd, int abort_cmd);
void glue_megasas_abort_no_cmd(int cmd, uint64_t context);
void glue_megasas_abort_invalid_context(int cmd, uint64_t context, int abort_cmd);
void glue_megasas_reset(int fw_state);
void glue_megasas_init(int sges, int cmds, const char *mode);
void glue_megasas_msix_raise(int vector);
void glue_megasas_msi_raise(int vector);
void glue_megasas_irq_lower(void);
void glue_megasas_irq_raise(void);
void glue_megasas_intr_enabled(void);
void glue_megasas_intr_disabled(void);
void glue_megasas_msix_enabled(int vector);
void glue_megasas_msi_enabled(int vector);
void glue_megasas_mmio_readl(const char *reg, uint32_t val);
void glue_megasas_mmio_invalid_readl(unsigned long addr);
void glue_megasas_mmio_writel(const char *reg, uint32_t val);
void glue_megasas_mmio_invalid_writel(uint32_t addr, uint32_t val);
void glue_pvscsi_ring_init_data(uint32_t txr_len_log2, uint32_t rxr_len_log2);
void glue_pvscsi_ring_init_msg(uint32_t len_log2);
void glue_pvscsi_ring_flush_cmp(uint64_t filled_cmp_ptr);
void glue_pvscsi_ring_flush_msg(uint64_t filled_cmp_ptr);
void glue_pvscsi_update_irq_level(bool raise, uint64_t mask, uint64_t status);
void glue_pvscsi_update_irq_msi(void);
void glue_pvscsi_cmp_ring_put(unsigned long addr);
void glue_pvscsi_msg_ring_put(unsigned long addr);
void glue_pvscsi_complete_request(uint64_t context, uint64_t len, uint8_t sense_key);
void glue_pvscsi_get_sg_list(int nsg, size_t size);
void glue_pvscsi_get_next_sg_elem(uint32_t flags);
void glue_pvscsi_command_complete_not_found(uint32_t tag);
void glue_pvscsi_command_complete_data_run(void);
void glue_pvscsi_command_complete_sense_len(int len);
void glue_pvscsi_convert_sglist(uint64_t context, unsigned long addr, uint32_t resid);
void glue_pvscsi_process_req_descr(uint8_t cmd, uint64_t ctx);
void glue_pvscsi_process_req_descr_unknown_device(void);
void glue_pvscsi_process_req_descr_invalid_dir(void);
void glue_pvscsi_process_io(unsigned long addr);
void glue_pvscsi_on_cmd_noimpl(const char* cmd);
void glue_pvscsi_on_cmd_reset_dev(uint32_t tgt, int lun, void* dev);
void glue_pvscsi_on_cmd_arrived(const char* cmd);
void glue_pvscsi_on_cmd_abort(uint64_t ctx, uint32_t tgt);
void glue_pvscsi_on_cmd_unknown(uint64_t cmd_id);
void glue_pvscsi_on_cmd_unknown_data(uint32_t data);
void glue_pvscsi_io_write(const char* cmd, uint64_t val);
void glue_pvscsi_io_write_unknown(unsigned long addr, unsigned sz, uint64_t val);
void glue_pvscsi_io_read(const char* cmd, uint64_t status);
void glue_pvscsi_io_read_unknown(unsigned long addr, unsigned sz);
void glue_pvscsi_init_msi_fail(int res);
void glue_pvscsi_state(const char* state);
void glue_pvscsi_tx_rings_ppn(const char* label, uint64_t ppn);
void glue_pvscsi_tx_rings_num_pages(const char* label, uint32_t num);
void glue_esp_error_fifo_overrun(void);
void glue_esp_error_unhandled_command(uint32_t val);
void glue_esp_error_invalid_write(uint32_t val, uint32_t addr);
void glue_esp_raise_irq(void);
void glue_esp_lower_irq(void);
void glue_esp_raise_drq(void);
void glue_esp_lower_drq(void);
void glue_esp_dma_enable(void);
void glue_esp_dma_disable(void);
void glue_esp_pdma_read(int size);
void glue_esp_pdma_write(int size);
void glue_esp_get_cmd(uint32_t dmalen, int target);
void glue_esp_do_command_phase(uint8_t busid);
void glue_esp_do_identify(uint8_t byte);
void glue_esp_handle_satn_stop(uint32_t cmdlen);
void glue_esp_write_response(uint32_t status);
void glue_esp_do_dma(uint32_t cmdlen, uint32_t len);
void glue_esp_command_complete(void);
void glue_esp_command_complete_deferred(void);
void glue_esp_command_complete_unexpected(void);
void glue_esp_command_complete_fail(void);
void glue_esp_transfer_data(uint32_t dma_left, int32_t ti_size);
void glue_esp_handle_ti(uint32_t minlen);
void glue_esp_handle_ti_cmd(uint32_t cmdlen);
void glue_esp_mem_readb(uint32_t saddr, uint8_t reg);
void glue_esp_mem_writeb(uint32_t saddr, uint8_t reg, uint32_t val);
void glue_esp_mem_writeb_cmd_nop(uint32_t val);
void glue_esp_mem_writeb_cmd_flush(uint32_t val);
void glue_esp_mem_writeb_cmd_reset(uint32_t val);
void glue_esp_mem_writeb_cmd_bus_reset(uint32_t val);
void glue_esp_mem_writeb_cmd_iccs(uint32_t val);
void glue_esp_mem_writeb_cmd_msgacc(uint32_t val);
void glue_esp_mem_writeb_cmd_pad(uint32_t val);
void glue_esp_mem_writeb_cmd_satn(uint32_t val);
void glue_esp_mem_writeb_cmd_rstatn(uint32_t val);
void glue_esp_mem_writeb_cmd_sel(uint32_t val);
void glue_esp_mem_writeb_cmd_selatn(uint32_t val);
void glue_esp_mem_writeb_cmd_selatns(uint32_t val);
void glue_esp_mem_writeb_cmd_ensel(uint32_t val);
void glue_esp_mem_writeb_cmd_dissel(uint32_t val);
void glue_esp_mem_writeb_cmd_ti(uint32_t val);
void glue_esp_pci_error_invalid_dma_direction(void);
void glue_esp_pci_error_invalid_read(uint32_t reg);
void glue_esp_pci_error_invalid_write(uint32_t reg);
void glue_esp_pci_error_invalid_write_dma(uint32_t val, uint32_t addr);
void glue_esp_pci_dma_read(uint32_t saddr, uint32_t reg);
void glue_esp_pci_dma_write(uint32_t saddr, uint32_t reg, uint32_t val);
void glue_esp_pci_dma_idle(uint32_t val);
void glue_esp_pci_dma_blast(uint32_t val);
void glue_esp_pci_dma_abort(uint32_t val);
void glue_esp_pci_dma_start(uint32_t val);
void glue_esp_pci_sbac_read(uint32_t reg);
void glue_esp_pci_sbac_write(uint32_t reg, uint32_t val);
void glue_spapr_vscsi_send_rsp(uint8_t status, int32_t res_in, int32_t res_out);
void glue_spapr_vscsi_fetch_desc_no_data(void);
void glue_spapr_vscsi_fetch_desc_direct(void);
void glue_spapr_vscsi_fetch_desc_indirect(uint32_t qtag, unsigned desc, unsigned local_desc);
void glue_spapr_vscsi_fetch_desc_out_of_range(unsigned desc, unsigned desc_offset);
void glue_spapr_vscsi_fetch_desc_dma_read_error(int rc);
void glue_spapr_vscsi_fetch_desc_indirect_seg_ext(uint32_t qtag, unsigned n, unsigned desc, uint64_t va, uint32_t len);
void glue_spapr_vscsi_fetch_desc_out_of_desc(void);
void glue_spapr_vscsi_fetch_desc_out_of_desc_boundary(unsigned offset, unsigned desc, uint32_t len);
void glue_spapr_vscsi_fetch_desc_done(unsigned desc_num, unsigned desc_offset, uint64_t va, uint32_t len);
void glue_spapr_vscsi_srp_indirect_data(uint32_t len);
void glue_spapr_vscsi_srp_indirect_data_rw(int writing, int rc);
void glue_spapr_vscsi_srp_indirect_data_buf(unsigned a, unsigned b, unsigned c, unsigned d);
void glue_spapr_vscsi_srp_transfer_data(uint32_t len);
void glue_spapr_vscsi_transfer_data(uint32_t tag, uint32_t len, void *req);
void glue_spapr_vscsi_command_complete(uint32_t tag, uint32_t status, void *req);
void glue_spapr_vscsi_command_complete_sense_data1(uint32_t len, unsigned s0, unsigned s1, unsigned s2, unsigned s3, unsigned s4, unsigned s5, unsigned s6, unsigned s7);
void glue_spapr_vscsi_command_complete_sense_data2(unsigned s8, unsigned s9, unsigned s10, unsigned s11, unsigned s12, unsigned s13, unsigned s14, unsigned s15);
void glue_spapr_vscsi_command_complete_status(uint32_t status);
void glue_spapr_vscsi_save_request(uint32_t qtag, unsigned desc, unsigned offset);
void glue_spapr_vscsi_load_request(uint32_t qtag, unsigned desc, unsigned offset);
void glue_spapr_vscsi_process_login(void);
void glue_spapr_vscsi_process_tsk_mgmt(uint8_t func);
void glue_spapr_vscsi_queue_cmd_no_drive(uint64_t lun);
void glue_spapr_vscsi_queue_cmd(uint32_t qtag, unsigned cdb, const char *cmd, int lun, int ret);
void glue_spapr_vscsi_do_crq(unsigned c0, unsigned c1);
void glue_lsi_reset(void);
void glue_lsi_update_irq(int level, uint8_t dstat, uint8_t sist1, uint8_t sist0);
void glue_lsi_update_irq_disconnected(void);
void glue_lsi_script_scsi_interrupt(uint8_t stat1, uint8_t stat0, uint8_t sist1, uint8_t sist0);
void glue_lsi_script_dma_interrupt(uint8_t stat, uint8_t dstat);
void glue_lsi_bad_phase_jump(uint32_t dsp);
void glue_lsi_bad_phase_interrupt(void);
void glue_lsi_bad_selection(uint32_t id);
void glue_lsi_do_dma_unavailable(void);
void glue_lsi_do_dma(uint64_t addr, int len);
void glue_lsi_queue_command(uint32_t tag);
void glue_lsi_add_msg_byte_error(void);
void glue_lsi_add_msg_byte(uint8_t data);
void glue_lsi_reselect(int id);
void glue_lsi_queue_req_error(void *p);
void glue_lsi_queue_req(uint32_t tag);
void glue_lsi_command_complete(uint32_t status);
void glue_lsi_transfer_data(uint32_t tag, uint32_t len);
void glue_lsi_do_command(uint32_t dbc);
void glue_lsi_do_status(uint32_t dbc, uint8_t status);
void glue_lsi_do_status_error(void);
void glue_lsi_do_msgin(uint32_t dbc, int len);
void glue_lsi_do_msgout(uint32_t dbc);
void glue_lsi_do_msgout_disconnect(void);
void glue_lsi_do_msgout_noop(void);
void glue_lsi_do_msgout_extended(uint8_t msg, uint8_t len);
void glue_lsi_do_msgout_ignored(const char *msg);
void glue_lsi_do_msgout_simplequeue(uint8_t select_tag);
void glue_lsi_do_msgout_abort(uint32_t tag);
void glue_lsi_do_msgout_clearqueue(uint32_t tag);
void glue_lsi_do_msgout_busdevicereset(uint32_t tag);
void glue_lsi_do_msgout_select(int id);
void glue_lsi_memcpy(uint32_t dest, uint32_t src, int count);
void glue_lsi_wait_reselect(void);
void glue_lsi_execute_script(uint32_t dsp, uint32_t insn, uint32_t addr);
void glue_lsi_execute_script_blockmove_delayed(void);
void glue_lsi_execute_script_blockmove_badphase(const char *phase, const char *expected);
void glue_lsi_execute_script_io_alreadyreselected(void);
void glue_lsi_execute_script_io_selected(uint8_t id, const char *atn);
void glue_lsi_execute_script_io_disconnect(void);
void glue_lsi_execute_script_io_set(const char *atn, const char *ack, const char *tm, const char *cc);
void glue_lsi_execute_script_io_clear(const char *atn, const char *ack, const char *tm, const char *cc);
void glue_lsi_execute_script_io_opcode(const char *opcode, int reg, const char *opname, uint8_t data8, uint32_t sfbr, const char *ssfbr);
void glue_lsi_execute_script_tc_nop(void);
void glue_lsi_execute_script_tc_delayedselect_timeout(void);
void glue_lsi_execute_script_tc_compc(int result);
void glue_lsi_execute_script_tc_compp(const char *phase, char op, const char *insn_phase);
void glue_lsi_execute_script_tc_compd(uint32_t sfbr, uint8_t mask, char op, int result);
void glue_lsi_execute_script_tc_jump(uint32_t addr);
void glue_lsi_execute_script_tc_call(uint32_t addr);
void glue_lsi_execute_script_tc_return(uint32_t addr);
void glue_lsi_execute_script_tc_interrupt(uint32_t addr);
void glue_lsi_execute_script_tc_illegal(void);
void glue_lsi_execute_script_tc_cc_failed(void);
void glue_lsi_execute_script_mm_load(int reg, int n, uint32_t addr, int data);
void glue_lsi_execute_script_mm_store(int reg, int n, uint32_t addr);
void glue_lsi_execute_script_stop(void);
void glue_lsi_awoken(void);
void glue_lsi_reg_read(const char *name, int offset, uint8_t ret);
void glue_lsi_reg_write(const char *name, int offset, uint8_t val);
void glue_virtio_scsi_cmd_req(int lun, uint32_t tag, uint8_t cmd);
void glue_virtio_scsi_cmd_resp(int lun, uint32_t tag, int response, uint8_t status);
void glue_virtio_scsi_tmf_req(int lun, uint32_t tag, int subtype);
void glue_virtio_scsi_tmf_resp(int lun, uint32_t tag, int response);
void glue_virtio_scsi_an_req(int lun, uint32_t event_requested);
void glue_virtio_scsi_an_resp(int lun, int response);
void glue_virtio_scsi_event(int lun, int event, int reason);
void glue_scsi_disk_check_condition(uint32_t tag, uint8_t key, uint8_t asc, uint8_t ascq);
void glue_scsi_disk_read_complete(uint32_t tag, size_t size);
void glue_scsi_disk_read_data_count(uint32_t sector_count);
void glue_scsi_disk_read_data_invalid(void);
void glue_scsi_disk_write_complete_noio(uint32_t tag, size_t size);
void glue_scsi_disk_write_data_invalid(void);
void glue_scsi_disk_emulate_vpd_page_00(size_t xfer);
void glue_scsi_disk_emulate_vpd_page_80_not_supported(void);
void glue_scsi_disk_emulate_vpd_page_80(size_t xfer);
void glue_scsi_disk_emulate_vpd_page_83(size_t xfer);
void glue_scsi_disk_emulate_vpd_page_b0_not_supported(void);
void glue_scsi_disk_emulate_mode_sense(int cmd, int page, size_t xfer, int control);
void glue_scsi_disk_emulate_read_toc(int start_track, int format, int msf);
void glue_scsi_disk_emulate_read_data(int buflen);
void glue_scsi_disk_emulate_write_data(int buflen);
void glue_scsi_disk_emulate_command_SAI_16(void);
void glue_scsi_disk_emulate_command_SAI_unsupported(void);
void glue_scsi_disk_emulate_command_SEEK_10(uint64_t lba);
void glue_scsi_disk_emulate_command_MODE_SELECT(size_t xfer);
void glue_scsi_disk_emulate_command_MODE_SELECT_10(size_t xfer);
void glue_scsi_disk_emulate_command_UNMAP(size_t xfer);
void glue_scsi_disk_emulate_command_VERIFY(int bytchk);
void glue_scsi_disk_emulate_command_WRITE_SAME(int cmd, size_t xfer);
void glue_scsi_disk_emulate_command_UNKNOWN(int cmd, const char *name);
void glue_scsi_disk_dma_command_READ(uint64_t lba, uint32_t len);
void glue_scsi_disk_dma_command_WRITE(const char *cmd, uint64_t lba, int len);
void glue_scsi_disk_new_request(uint32_t lun, uint32_t tag, const char *line);
void glue_scsi_disk_aio_sgio_command(uint32_t tag, uint8_t cmd, uint64_t lba, int len, uint32_t timeout);
void glue_scsi_generic_command_complete_noio(void *req, uint32_t tag, int statuc);
void glue_scsi_generic_read_complete(uint32_t tag, int len);
void glue_scsi_generic_read_data(uint32_t tag);
void glue_scsi_generic_write_complete(int ret);
void glue_scsi_write_complete(void);
void glue_scsi_generic_write_complete_blocksize(int blocksize);
void glue_scsi_generic_write_data(uint32_t tag);
void glue_scsi_generic_send_command(const char *line);
void glue_scsi_generic_realize_type(int type);
void glue_scsi_generic_realize_blocksize(int blocksize);
void glue_scsi_generic_aio_sgio_command(uint32_t tag, uint8_t cmd, uint32_t timeout);
void glue_scsi_generic_ioctl_sgio_command(uint8_t cmd, uint32_t timeout);
void glue_scsi_generic_ioctl_sgio_done(uint8_t cmd, int ret, uint8_t status, uint8_t host_status);
