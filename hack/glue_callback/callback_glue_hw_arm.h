void glue_virt_acpi_setup(void);
void glue_smmu_add_mr(const char *name);
void glue_smmu_ptw_level(int level, uint64_t iova, size_t subpage_size, uint64_t baseaddr, uint32_t offset, uint64_t pte);
void glue_smmu_ptw_invalid_pte(int stage, int level, uint64_t baseaddr, uint64_t pteaddr, uint32_t offset, uint64_t pte);
void glue_smmu_ptw_page_pte(int stage, int level,  uint64_t iova, uint64_t baseaddr, uint64_t pteaddr, uint64_t pte, uint64_t address);
void glue_smmu_ptw_block_pte(int stage, int level, uint64_t baseaddr, uint64_t pteaddr, uint64_t pte, uint64_t iova, uint64_t gpa, int bsize_mb);
void glue_smmu_get_pte(uint64_t baseaddr, int index, uint64_t pteaddr, uint64_t pte);
void glue_smmu_iotlb_inv_all(void);
void glue_smmu_iotlb_inv_asid(uint16_t asid);
void glue_smmu_iotlb_inv_iova(uint16_t asid, uint64_t addr);
void glue_smmu_inv_notifiers_mr(const char *name);
void glue_smmu_iotlb_lookup_hit(uint16_t asid, uint64_t addr, uint32_t hit, uint32_t miss, uint32_t p);
void glue_smmu_iotlb_lookup_miss(uint16_t asid, uint64_t addr, uint32_t hit, uint32_t miss, uint32_t p);
void glue_smmu_iotlb_insert(uint16_t asid, uint64_t addr, uint8_t tg, uint8_t level);
void glue_smmuv3_read_mmio(uint64_t addr, uint64_t val, unsigned size, uint32_t r);
void glue_smmuv3_trigger_irq(int irq);
void glue_smmuv3_write_gerror(uint32_t toggled, uint32_t gerror);
void glue_smmuv3_write_gerrorn(uint32_t acked, uint32_t gerrorn);
void glue_smmuv3_unhandled_cmd(uint32_t type);
void glue_smmuv3_cmdq_consume(uint32_t prod, uint32_t cons, uint8_t prod_wrap, uint8_t cons_wrap);
void glue_smmuv3_cmdq_opcode(const char *opcode);
void glue_smmuv3_cmdq_consume_out(uint32_t prod, uint32_t cons, uint8_t prod_wrap, uint8_t cons_wrap);
void glue_smmuv3_cmdq_consume_error(const char *cmd_name, uint8_t cmd_error);
void glue_smmuv3_write_mmio(uint64_t addr, uint64_t val, unsigned size, uint32_t r);
void glue_smmuv3_record_event(const char *type, uint32_t sid);
void glue_smmuv3_find_ste(uint16_t sid, uint32_t features, uint16_t sid_split);
void glue_smmuv3_find_ste_2lvl(uint64_t strtab_base, uint64_t l1ptr, int l1_ste_offset, uint64_t l2ptr, int l2_ste_offset, int max_l2_ste);
void glue_smmuv3_get_ste(uint64_t addr);
void glue_smmuv3_translate_disable(const char *n, uint16_t sid, uint64_t addr, bool is_write);
void glue_smmuv3_translate_bypass(const char *n, uint16_t sid, uint64_t addr, bool is_write);
void glue_smmuv3_translate_abort(const char *n, uint16_t sid, uint64_t addr, bool is_write);
void glue_smmuv3_translate_success(const char *n, uint16_t sid, uint64_t iova, uint64_t translated, int perm);
void glue_smmuv3_get_cd(uint64_t addr);
void glue_smmuv3_decode_cd(uint32_t oas);
void glue_smmuv3_decode_cd_tt(int i, uint32_t tsz, uint64_t ttb, uint32_t granule_sz, bool had);
void glue_smmuv3_cmdq_cfgi_ste(int streamid);
void glue_smmuv3_cmdq_cfgi_ste_range(int start, int end);
void glue_smmuv3_cmdq_cfgi_cd(uint32_t sid);
void glue_smmuv3_config_cache_hit(uint32_t sid, uint32_t hits, uint32_t misses, uint32_t perc);
void glue_smmuv3_config_cache_miss(uint32_t sid, uint32_t hits, uint32_t misses, uint32_t perc);
void glue_smmuv3_s1_range_inval(int vmid, int asid, uint64_t addr, uint8_t tg, uint64_t num_pages, uint8_t ttl, bool leaf);
void glue_smmuv3_cmdq_tlbi_nh(void);
void glue_smmuv3_cmdq_tlbi_nh_asid(uint16_t asid);
void glue_smmuv3_config_cache_inv(uint32_t sid);
void glue_smmuv3_notify_flag_add(const char *iommu);
void glue_smmuv3_notify_flag_del(const char *iommu);
void glue_smmuv3_inv_notifiers_iova(const char *name, uint16_t asid, uint64_t iova, uint8_t tg, uint64_t num_pages);
