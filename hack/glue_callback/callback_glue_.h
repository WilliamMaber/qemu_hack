void glue_multiwrite_cb(void);
void glue_trace_multiwrite_cb(void);
void glue_g_malloc(size_t size);
void glue_sprintf(void);
void glue_breakpoint_insert(int cpu_index, uint64_t pc, int flags);
void glue_breakpoint_remove(int cpu_index, uint64_t pc, int flags);
void glue_breakpoint_singlestep(int cpu_index, int enabled);
void glue_dma_blk_io(void *dbs, void *bs, int64_t offset, bool to_dev);
void glue_dma_aio_cancel(void *dbs);
void glue_dma_complete(void *dbs, int ret, void *cb);
void glue_dma_blk_cb(void *dbs, int ret);
void glue_dma_map_wait(void *dbs);
void glue_find_ram_offset(uint64_t size, uint64_t offset);
void glue_find_ram_offset_loop(uint64_t size, uint64_t candidate, uint64_t offset, uint64_t next, uint64_t mingap);
void glue_memory_notdirty_write_access(uint64_t vaddr, uint64_t ram_addr, unsigned size);
void glue_memory_notdirty_set_dirty(uint64_t vaddr);
void glue_gdbstub_op_start(const char *device);
void glue_gdbstub_op_exiting(uint8_t code);
void glue_gdbstub_op_continue(void);
void glue_gdbstub_op_continue_cpu(int cpu_index);
void glue_gdbstub_op_stepping(int cpu_index);
void glue_gdbstub_op_extra_info(const char *info);
void glue_gdbstub_hit_watchpoint(const char *type, int cpu_gdb_index, uint64_t vaddr);
void glue_gdbstub_hit_internal_error(void);
void glue_gdbstub_hit_break(void);
void glue_gdbstub_hit_paused(void);
void glue_gdbstub_hit_shutdown(void);
void glue_gdbstub_hit_io_error(void);
void glue_gdbstub_hit_watchdog(void);
void glue_gdbstub_hit_unknown(int state);
void glue_gdbstub_io_reply(const char *message);
void glue_gdbstub_io_binaryreply(size_t ofs, const char *line);
void glue_gdbstub_io_command(const char *command);
void glue_gdbstub_io_got_ack(void);
void glue_gdbstub_io_got_unexpected(uint8_t ch);
void glue_gdbstub_err_got_nack(void);
void glue_gdbstub_err_garbage(uint8_t ch);
void glue_gdbstub_err_overrun(void);
void glue_gdbstub_err_invalid_repeat(uint8_t ch);
void glue_gdbstub_err_invalid_rle(void);
void glue_gdbstub_err_checksum_invalid(uint8_t ch);
void glue_gdbstub_err_checksum_incorrect(uint8_t expected, uint8_t got);
void glue_job_state_transition(void *job,  int ret, const char *legal, const char *s0, const char *s1);
void glue_job_apply_verb(void *job, const char *state, const char *verb, const char *legal);
void glue_job_completed(void *job, int ret);
void glue_qmp_job_cancel(void *job);
void glue_qmp_job_pause(void *job);
void glue_qmp_job_resume(void *job);
void glue_qmp_job_complete(void *job);
void glue_qmp_job_finalize(void *job);
void glue_qmp_job_dismiss(void *job);
void glue_guest_cpu_enter(void);
void glue_guest_cpu_exit(void);
void glue_guest_cpu_reset(void);
void glue_guest_ld_before(TCGv vaddr, uint32_t memopidx);
void glue_guest_st_before(TCGv vaddr, uint32_t memopidx);
void glue_guest_rmw_before(TCGv vaddr, uint32_t memopidx);
void glue_guest_user_syscall(uint64_t num, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5, uint64_t arg6, uint64_t arg7, uint64_t arg8);
void glue_guest_user_syscall_ret(uint64_t num, uint64_t ret);
