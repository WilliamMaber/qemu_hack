void glue_nbd_send_option_request(uint32_t opt, const char *name, uint32_t len);
void glue_nbd_receive_option_reply(uint32_t option, const char *optname, uint32_t type, const char *typename, uint32_t length);
void glue_nbd_server_error_msg(uint32_t err, const char *type, const char *msg);
void glue_nbd_reply_err_ignored(uint32_t option, const char *name, uint32_t reply, const char *reply_name);
void glue_nbd_receive_list(const char *name, const char *desc);
void glue_nbd_opt_info_go_start(const char *opt, const char *name);
void glue_nbd_opt_info_go_success(const char *opt);
void glue_nbd_opt_info_unknown(int info, const char *name);
void glue_nbd_opt_info_block_size(uint32_t minimum, uint32_t preferred, uint32_t maximum);
void glue_nbd_receive_query_exports_start(const char *wantname);
void glue_nbd_receive_query_exports_success(const char *wantname);
void glue_nbd_receive_starttls_new_client(void);
void glue_nbd_receive_starttls_tls_handshake(void);
void glue_nbd_opt_meta_request(const char *optname, const char *context, const char *export);
void glue_nbd_opt_meta_reply(const char *optname, const char *context, uint32_t id);
void glue_nbd_start_negotiate(void *tlscreds, const char *hostname);
void glue_nbd_receive_negotiate_magic(uint64_t magic);
void glue_nbd_receive_negotiate_server_flags(uint32_t globalflags);
void glue_nbd_receive_negotiate_name(const char *name);
void glue_nbd_receive_negotiate_size_flags(uint64_t size, uint16_t flags);
void glue_nbd_init_set_socket(void);
void glue_nbd_init_set_block_size(unsigned long block_size);
void glue_nbd_init_set_size(unsigned long sectors);
void glue_nbd_init_trailing_bytes(int ignored_bytes);
void glue_nbd_init_set_readonly(void);
void glue_nbd_init_finish(void);
void glue_nbd_client_loop(void);
void glue_nbd_client_loop_ret(int ret, const char *error);
void glue_nbd_client_clear_queue(void);
void glue_nbd_client_clear_socket(void);
void glue_nbd_send_request(uint64_t from, uint32_t len, uint64_t handle, uint16_t flags, uint16_t type, const char *name);
void glue_nbd_receive_simple_reply(int32_t error, const char *errname, uint64_t handle);
void glue_nbd_receive_structured_reply_chunk(uint16_t flags, uint16_t type, const char *name, uint64_t handle, uint32_t length);
void glue_nbd_unknown_error(int err);
void glue_nbd_negotiate_send_rep_len(uint32_t opt, const char *optname, uint32_t type, const char *typename, uint32_t len);
void glue_nbd_negotiate_send_rep_err(const char *msg);
void glue_nbd_negotiate_send_rep_list(const char *name, const char *desc);
void glue_nbd_negotiate_handle_export_name(void);
void glue_nbd_negotiate_handle_export_name_request(const char *name);
void glue_nbd_negotiate_send_info(int info, const char *name, uint32_t length);
void glue_nbd_negotiate_handle_info_requests(int requests);
void glue_nbd_negotiate_handle_info_request(int request, const char *name);
void glue_nbd_negotiate_handle_info_block_size(uint32_t minimum, uint32_t preferred, uint32_t maximum);
void glue_nbd_negotiate_handle_starttls(void);
void glue_nbd_negotiate_handle_starttls_handshake(void);
void glue_nbd_negotiate_meta_context(const char *optname, const char *export, uint32_t queries);
void glue_nbd_negotiate_meta_query_skip(const char *reason);
void glue_nbd_negotiate_meta_query_parse(const char *query);
void glue_nbd_negotiate_meta_query_reply(const char *context, uint32_t id);
void glue_nbd_negotiate_options_flags(uint32_t flags);
void glue_nbd_negotiate_options_check_magic(uint64_t magic);
void glue_nbd_negotiate_options_check_option(uint32_t option, const char *name);
void glue_nbd_negotiate_begin(void);
void glue_nbd_negotiate_new_style_size_flags(uint64_t size, unsigned flags);
void glue_nbd_negotiate_success(void);
void glue_nbd_receive_request(uint32_t magic, uint16_t flags, uint16_t type, uint64_t from, uint32_t len);
void glue_nbd_blk_aio_attached(const char *name, void *ctx);
void glue_nbd_blk_aio_detach(const char *name, void *ctx);
void glue_nbd_co_send_simple_reply(uint64_t handle, uint32_t error, const char *errname, int len);
void glue_nbd_co_send_structured_done(uint64_t handle);
void glue_nbd_co_send_structured_read(uint64_t handle, uint64_t offset, void *data, size_t size);
void glue_nbd_co_send_structured_read_hole(uint64_t handle, uint64_t offset, size_t size);
void glue_nbd_co_send_extents(uint64_t handle, unsigned int extents, uint32_t id, uint64_t length, int last);
void glue_nbd_co_send_structured_error(uint64_t handle, int err, const char *errname, const char *msg);
void glue_nbd_co_receive_request_decode_type(uint64_t handle, uint16_t type, const char *name);
void glue_nbd_co_receive_request_payload_received(uint64_t handle, uint32_t len);
void glue_nbd_co_receive_align_compliance(const char *op, uint64_t from, uint32_t len, uint32_t align);
void glue_nbd_trip(void);
