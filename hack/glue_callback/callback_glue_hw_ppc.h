void glue_spapr_pci_msi(const char *msg, uint32_t ca);
void glue_spapr_pci_msi_setup(const char *name, unsigned vector, uint64_t addr);
void glue_spapr_pci_rtas_ibm_change_msi(unsigned cfg, unsigned func, unsigned req, unsigned first);
void glue_spapr_pci_rtas_ibm_query_interrupt_source_number(unsigned ioa, unsigned intr);
void glue_spapr_pci_msi_write(uint64_t addr, uint64_t data, uint32_t dt_irq);
void glue_spapr_pci_lsi_set(const char *busname, int pin, uint32_t irq);
void glue_spapr_pci_msi_retry(unsigned config_addr, unsigned req_num, unsigned max_irqs);
void glue_spapr_cas_continue(unsigned long n);
void glue_spapr_cas_pvr(uint32_t cur_pvr, bool explicit_match, uint32_t new_pvr);
void glue_spapr_h_resize_hpt_prepare(uint64_t flags, uint64_t shift);
void glue_spapr_h_resize_hpt_commit(uint64_t flags, uint64_t shift);
void glue_spapr_update_dt(unsigned cb);
void glue_spapr_update_dt_failed_size(unsigned cbold, unsigned cbnew, unsigned magic);
void glue_spapr_update_dt_failed_check(unsigned cbold, unsigned cbnew, unsigned magic);
void glue_spapr_h_tpm_comm(const char *device_path, uint64_t operation);
void glue_spapr_tpm_execute(uint64_t data_in, uint64_t data_in_sz, uint64_t data_out, uint64_t data_out_sz);
void glue_spapr_iommu_put(uint64_t liobn, uint64_t ioba, uint64_t tce, uint64_t ret);
void glue_spapr_iommu_get(uint64_t liobn, uint64_t ioba, uint64_t ret, uint64_t tce);
void glue_spapr_iommu_indirect(uint64_t liobn, uint64_t ioba, uint64_t tce, uint64_t iobaN, uint64_t tceN, uint64_t ret);
void glue_spapr_iommu_stuff(uint64_t liobn, uint64_t ioba, uint64_t tce_value, uint64_t npages, uint64_t ret);
void glue_spapr_iommu_pci_put(uint64_t liobn, uint64_t ioba, uint64_t tce, uint64_t ret);
void glue_spapr_iommu_pci_get(uint64_t liobn, uint64_t ioba, uint64_t ret, uint64_t tce);
void glue_spapr_iommu_pci_indirect(uint64_t liobn, uint64_t ioba, uint64_t tce, uint64_t iobaN, uint64_t tceN, uint64_t ret);
void glue_spapr_iommu_pci_stuff(uint64_t liobn, uint64_t ioba, uint64_t tce_value, uint64_t npages, uint64_t ret);
void glue_spapr_iommu_xlate(uint64_t liobn, uint64_t ioba, uint64_t tce, unsigned perm, unsigned pgsize);
void glue_spapr_iommu_new_table(uint64_t liobn, void *table, int fd);
void glue_spapr_iommu_pre_save(uint64_t liobn, uint32_t nb, uint64_t offs, uint32_t ps);
void glue_spapr_iommu_post_load(uint64_t liobn, uint32_t pre_nb, uint32_t post_nb, uint64_t offs, uint32_t ps);
void glue_spapr_iommu_ddw_query(uint64_t buid, uint32_t cfgaddr, unsigned wa, uint64_t win_size, uint32_t pgmask);
void glue_spapr_iommu_ddw_create(uint64_t buid, uint32_t cfgaddr, uint64_t pg_size, uint64_t req_size, uint64_t start, uint32_t liobn);
void glue_spapr_iommu_ddw_remove(uint32_t liobn);
void glue_spapr_iommu_ddw_reset(uint64_t buid, uint32_t cfgaddr);
void glue_spapr_drc_set_isolation_state(uint32_t index, int state);
void glue_spapr_drc_set_isolation_state_finalizing(uint32_t index);
void glue_spapr_drc_set_dr_indicator(uint32_t index, int state);
void glue_spapr_drc_set_allocation_state(uint32_t index, int state);
void glue_spapr_drc_set_allocation_state_finalizing(uint32_t index);
void glue_spapr_drc_set_configured(uint32_t index);
void glue_spapr_drc_attach(uint32_t index);
void glue_spapr_drc_unplug_request(uint32_t index);
void glue_spapr_drc_awaiting_quiesce(uint32_t index);
void glue_spapr_drc_reset(uint32_t index);
void glue_spapr_drc_realize(uint32_t index);
void glue_spapr_drc_realize_child(uint32_t index, const char *childname);
void glue_spapr_drc_realize_complete(uint32_t index);
void glue_spapr_drc_unrealize(uint32_t index);
void glue_spapr_ovec_parse_vector(int vector, int byte, uint16_t vec_len, uint8_t entry);
void glue_spapr_ovec_populate_dt(int byte, uint16_t vec_len, uint8_t entry);
void glue_spapr_rtas_get_sensor_state_not_supported(uint32_t index, uint32_t type);
void glue_spapr_rtas_get_sensor_state_invalid(uint32_t index);
void glue_spapr_rtas_ibm_configure_connector_invalid(uint32_t index);
void glue_spapr_vio_h_reg_crq(uint64_t reg, uint64_t queue_addr, uint64_t queue_len);
void glue_spapr_vio_free_crq(uint32_t reg);
void glue_vof_error_str_truncated(const char *s, int len);
void glue_vof_error_param(const char *method, int nargscheck, int nretcheck, int nargs, int nret);
void glue_vof_error_unknown_service(const char *service, int nargs, int nret);
void glue_vof_error_unknown_method(const char *method);
void glue_vof_error_unknown_ihandle_close(uint32_t ih);
void glue_vof_error_unknown_path(const char *path);
void glue_vof_error_write(uint32_t ih);
void glue_vof_finddevice(const char *path, uint32_t ph);
void glue_vof_claim(uint32_t virt, uint32_t size, uint32_t align, uint32_t ret);
void glue_vof_release(uint32_t virt, uint32_t size, uint32_t ret);
void glue_vof_method(uint32_t ihandle, const char *method, uint32_t param, uint32_t ret, uint32_t ret2);
void glue_vof_getprop(uint32_t ph, const char *prop, uint32_t ret, const char *val);
void glue_vof_getproplen(uint32_t ph, const char *prop, uint32_t ret);
void glue_vof_open(const char *path, uint32_t ph, uint32_t ih);
void glue_vof_interpret(const char *cmd, uint32_t param1, uint32_t param2, uint32_t ret, uint32_t ret2);
void glue_vof_package_to_path(uint32_t ph, const char *tmp, int ret);
void glue_vof_instance_to_path(uint32_t ih, uint32_t ph, const char *tmp, int ret);
void glue_vof_instance_to_package(uint32_t ih, uint32_t ph);
void glue_vof_write(uint32_t ih, unsigned cb, const char *msg);
void glue_vof_avail(uint64_t start, uint64_t end, uint64_t size);
void glue_vof_claimed(uint64_t start, uint64_t end, uint64_t size);
void glue_ppc_tb_adjust(uint64_t offs1, uint64_t offs2, int64_t diff, int64_t seconds);
void glue_ppc_tb_load(uint64_t tb);
void glue_ppc_tb_store(uint64_t tb, uint64_t offset);
void glue_ppc_decr_load(uint64_t tb);
void glue_ppc_decr_excp(const char *action);
void glue_ppc_decr_store(uint32_t nr_bits, uint64_t decr, uint64_t value);
void glue_ppc4xx_fit(uint32_t ir, uint64_t tcr, uint64_t tsr);
void glue_ppc4xx_pit_stop(void);
void glue_ppc4xx_pit_start(uint64_t reload);
void glue_ppc4xx_pit(uint32_t ar, uint32_t ir, uint64_t tcr, uint64_t tsr, uint64_t reload);
void glue_ppc4xx_wdt(uint64_t tcr, uint64_t tsr);
void glue_ppc40x_store_pit(uint64_t value);
void glue_ppc40x_store_tcr(uint64_t value);
void glue_ppc40x_store_tsr(uint64_t value);
void glue_ppc40x_set_tb_clk(uint32_t value);
void glue_ppc40x_timers_init(uint32_t value);
void glue_ppc_irq_set(void *env, uint32_t pin, uint32_t level);
void glue_ppc_irq_set_exit(void *env, uint32_t n_IRQ, uint32_t level, uint32_t pending, uint32_t request);
void glue_ppc_irq_set_state(const char *name, uint32_t level);
void glue_ppc_irq_reset(const char *name);
void glue_ppc_irq_cpu(const char *action);
void glue_ppc_dcr_read(uint32_t addr, uint32_t val);
void glue_ppc_dcr_write(uint32_t addr, uint32_t val);
void glue_prep_systemio_read(uint32_t addr, uint32_t val);
void glue_prep_systemio_write(uint32_t addr, uint32_t val);
void glue_rs6000mc_id_read(uint32_t addr, uint32_t val);
void glue_rs6000mc_presence_read(uint32_t addr, uint32_t val);
void glue_rs6000mc_size_read(uint32_t addr, uint32_t val);
void glue_rs6000mc_size_write(uint32_t addr, uint32_t val);
void glue_rs6000mc_parity_read(uint32_t addr, uint32_t val);
void glue_ppc4xx_pci_map_irq(int32_t devfn, int irq_num, int slot);
void glue_ppc4xx_pci_set_irq(int irq_num);
void glue_ppc440_pcix_map_irq(int32_t devfn, int irq_num, int slot);
void glue_ppc440_pcix_set_irq(int irq_num);
void glue_ppc440_pcix_update_pim(int idx, uint64_t size, uint64_t la);
void glue_ppc440_pcix_update_pom(int idx, uint32_t size, uint64_t la, uint64_t pcia);
void glue_ppc440_pcix_reg_read(uint64_t addr, uint32_t val);
void glue_ppc440_pcix_reg_write(uint64_t addr, uint32_t val, uint32_t size);
void glue_opba_readb(uint64_t addr, uint32_t val);
void glue_opba_writeb(uint64_t addr, uint64_t val);
void glue_opba_init(uint64_t addr);
void glue_ppc405_gpio_read(uint64_t addr, uint32_t size);
void glue_ppc405_gpio_write(uint64_t addr, uint32_t size, uint64_t val);
void glue_ppc405_gpio_init(uint64_t addr);
void glue_ocm_update_mappings(uint32_t isarc, uint32_t isacntl, uint32_t dsarc, uint32_t dsacntl, uint32_t ocm_isarc, uint32_t ocm_isacntl, uint32_t ocm_dsarc, uint32_t ocm_dsacntl);
void glue_ocm_map(const char* prefix, uint32_t isarc);
void glue_ocm_unmap(const char* prefix, uint32_t isarc);
void glue_ppc4xx_gpt_read(uint64_t addr, uint32_t size);
void glue_ppc4xx_gpt_write(uint64_t addr, uint32_t size, uint64_t val);
void glue_ppc4xx_gpt_init(uint64_t addr);
void glue_ppc405ep_clocks_compute(const char *param, uint32_t param2, uint32_t val);
void glue_ppc405ep_clocks_setup(const char *trace);
void glue_ppc4xx_sdram_enable(const char *trace);
void glue_ppc4xx_sdram_unmap(uint64_t addr, uint64_t size);
void glue_ppc4xx_sdram_map(uint64_t addr, uint64_t size);
