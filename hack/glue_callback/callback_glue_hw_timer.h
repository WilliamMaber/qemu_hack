void glue_slavio_timer_get_out(uint64_t limit, uint32_t counthigh, uint32_t count);
void glue_slavio_timer_irq(uint32_t counthigh, uint32_t count);
void glue_slavio_timer_mem_readl_invalid(uint64_t addr);
void glue_slavio_timer_mem_readl(uint64_t addr, uint32_t ret);
void glue_slavio_timer_mem_writel(uint64_t addr, uint32_t val);
void glue_slavio_timer_mem_writel_limit(unsigned int timer_index, uint64_t count);
void glue_slavio_timer_mem_writel_counter_invalid(void);
void glue_slavio_timer_mem_writel_status_start(unsigned int timer_index);
void glue_slavio_timer_mem_writel_status_stop(unsigned int timer_index);
void glue_slavio_timer_mem_writel_mode_user(unsigned int timer_index);
void glue_slavio_timer_mem_writel_mode_counter(unsigned int timer_index);
void glue_slavio_timer_mem_writel_mode_invalid(void);
void glue_slavio_timer_mem_writel_invalid(uint64_t addr);
void glue_grlib_gptimer_enable(int id, uint32_t count);
void glue_grlib_gptimer_disabled(int id, uint32_t config);
void glue_grlib_gptimer_restart(int id, uint32_t reload);
void glue_grlib_gptimer_set_scaler(uint32_t scaler, uint32_t freq);
void glue_grlib_gptimer_hit(int id);
void glue_grlib_gptimer_readl(int id, uint64_t addr, uint32_t val);
void glue_grlib_gptimer_writel(int id, uint64_t addr, uint32_t val);
void glue_aspeed_timer_ctrl_enable(uint8_t i, bool enable);
void glue_aspeed_timer_ctrl_external_clock(uint8_t i, bool enable);
void glue_aspeed_timer_ctrl_overflow_interrupt(uint8_t i, bool enable);
void glue_aspeed_timer_ctrl_pulse_enable(uint8_t i, bool enable);
void glue_aspeed_timer_set_ctrl2(uint32_t value);
void glue_aspeed_timer_set_value(int timer, int reg, uint32_t value);
void glue_aspeed_timer_read(uint64_t offset, unsigned size, uint64_t value);
void glue_systick_reload(void);
void glue_systick_timer_tick(void);
void glue_systick_read(uint64_t addr, uint32_t value, unsigned size);
void glue_systick_write(uint64_t addr, uint32_t value, unsigned size);
void glue_cmsdk_apb_timer_read(uint64_t offset, uint64_t data, unsigned size);
void glue_cmsdk_apb_timer_write(uint64_t offset, uint64_t data, unsigned size);
void glue_cmsdk_apb_timer_reset(void);
void glue_cmsdk_apb_dualtimer_read(uint64_t offset, uint64_t data, unsigned size);
void glue_cmsdk_apb_dualtimer_write(uint64_t offset, uint64_t data, unsigned size);
void glue_cmsdk_apb_dualtimer_reset(void);
void glue_npcm7xx_timer_read(const char *id, uint64_t offset, uint64_t value);
void glue_npcm7xx_timer_write(const char *id, uint64_t offset, uint64_t value);
void glue_npcm7xx_timer_irq(const char *id, int timer, int state);
void glue_nrf51_timer_read(uint8_t timer_id, uint64_t addr, uint32_t value, unsigned size);
void glue_nrf51_timer_write(uint8_t timer_id, uint64_t addr, uint32_t value, unsigned size);
void glue_nrf51_timer_set_count(uint8_t timer_id, uint8_t counter_id, uint32_t value);
void glue_bcm2835_systmr_timer_expired(unsigned id);
void glue_bcm2835_systmr_irq_ack(unsigned id);
void glue_bcm2835_systmr_read(uint64_t offset, uint64_t data);
void glue_bcm2835_systmr_write(uint64_t offset, uint32_t data);
void glue_bcm2835_systmr_run(unsigned id, uint64_t delay_us);
void glue_avr_timer16_read(uint8_t addr, uint8_t value);
void glue_avr_timer16_read_ifr(uint8_t value);
void glue_avr_timer16_read_imsk(uint8_t value);
void glue_avr_timer16_write(uint8_t addr, uint8_t value);
void glue_avr_timer16_write_imsk(uint8_t value);
void glue_avr_timer16_interrupt_count(uint8_t cnt);
void glue_avr_timer16_interrupt_overflow(const char *reason);
void glue_avr_timer16_next_alarm(uint64_t delay_ns);
void glue_avr_timer16_clksrc_update(uint64_t freq_hz, uint64_t period_ns, uint64_t delay_s);
void glue_sse_counter_control_read(uint64_t offset, uint64_t data, unsigned size);
void glue_sse_counter_control_write(uint64_t offset, uint64_t data, unsigned size);
void glue_sse_counter_status_read(uint64_t offset, uint64_t data, unsigned size);
void glue_sse_counter_status_write(uint64_t offset, uint64_t data, unsigned size);
void glue_sse_counter_reset(void);
void glue_sse_timer_read(uint64_t offset, uint64_t data, unsigned size);
void glue_sse_timer_write(uint64_t offset, uint64_t data, unsigned size);
void glue_sse_timer_reset(void);
void glue_sifive_pwm_set_alarm(uint64_t alarm, uint64_t now);
void glue_sifive_pwm_interrupt(int num);
void glue_sifive_pwm_read(uint64_t offset);
void glue_sifive_pwm_write(uint64_t data, uint64_t offset);
void glue_sh_timer_start_stop(int enable, int current);
void glue_sh_timer_read(uint64_t offset);
void glue_sh_timer_write(uint64_t offset, uint64_t value);
