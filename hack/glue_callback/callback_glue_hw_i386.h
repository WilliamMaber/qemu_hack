void glue_x86_iommu_iec_notify(bool global, uint32_t index, uint32_t mask);
void glue_vtd_inv_desc(const char *type, uint64_t hi, uint64_t lo);
void glue_vtd_inv_desc_cc_domain(uint16_t domain);
void glue_vtd_inv_desc_cc_global(void);
void glue_vtd_inv_desc_cc_device(uint8_t bus, uint8_t dev, uint8_t fn);
void glue_vtd_inv_desc_cc_devices(uint16_t sid, uint16_t fmask);
void glue_vtd_inv_desc_iotlb_global(void);
void glue_vtd_inv_desc_iotlb_domain(uint16_t domain);
void glue_vtd_inv_desc_iotlb_pages(uint16_t domain, uint64_t addr, uint8_t mask);
void glue_vtd_inv_desc_wait_sw(uint64_t addr, uint32_t data);
void glue_vtd_inv_desc_wait_irq(const char *msg);
void glue_vtd_inv_desc_wait_write_fail(uint64_t hi, uint64_t lo);
void glue_vtd_inv_desc_iec(uint32_t granularity, uint32_t index, uint32_t mask);
void glue_vtd_inv_qi_enable(bool enable);
void glue_vtd_inv_qi_setup(uint64_t addr, int size);
void glue_vtd_inv_qi_head(uint16_t head);
void glue_vtd_inv_qi_tail(uint16_t head);
void glue_vtd_inv_qi_fetch(void);
void glue_vtd_context_cache_reset(void);
void glue_vtd_re_not_present(uint8_t bus);
void glue_vtd_ce_not_present(uint8_t bus, uint8_t devfn);
void glue_vtd_iotlb_page_hit(uint16_t sid, uint64_t addr, uint64_t slpte, uint16_t domain);
void glue_vtd_iotlb_page_update(uint16_t sid, uint64_t addr, uint64_t slpte, uint16_t domain);
void glue_vtd_iotlb_cc_hit(uint8_t bus, uint8_t devfn, uint64_t high, uint64_t low, uint32_t gen);
void glue_vtd_iotlb_cc_update(uint8_t bus, uint8_t devfn, uint64_t high, uint64_t low, uint32_t gen1, uint32_t gen2);
void glue_vtd_iotlb_reset(const char *reason);
void glue_vtd_fault_disabled(void);
void glue_vtd_replay_ce_valid(const char *mode, uint8_t bus, uint8_t dev, uint8_t fn, uint16_t domain, uint64_t hi, uint64_t lo);
void glue_vtd_replay_ce_invalid(uint8_t bus, uint8_t dev, uint8_t fn);
void glue_vtd_page_walk_level(uint64_t addr, uint32_t level, uint64_t start, uint64_t end);
void glue_vtd_page_walk_one(uint16_t domain, uint64_t iova, uint64_t gpa, uint64_t mask, int perm);
void glue_vtd_page_walk_one_skip_map(uint64_t iova, uint64_t mask, uint64_t translated);
void glue_vtd_page_walk_one_skip_unmap(uint64_t iova, uint64_t mask);
void glue_vtd_page_walk_skip_read(uint64_t iova, uint64_t next);
void glue_vtd_page_walk_skip_reserve(uint64_t iova, uint64_t next);
void glue_vtd_switch_address_space(uint8_t bus, uint8_t slot, uint8_t fn, bool on);
void glue_vtd_as_unmap_whole(uint8_t bus, uint8_t slot, uint8_t fn, uint64_t iova, uint64_t size);
void glue_vtd_translate_pt(uint16_t sid, uint64_t addr);
void glue_vtd_pt_enable_fast_path(uint16_t sid, bool success);
void glue_vtd_irq_generate(uint64_t addr, uint64_t data);
void glue_vtd_reg_read(uint64_t addr, uint64_t size);
void glue_vtd_reg_write(uint64_t addr, uint64_t size, uint64_t val);
void glue_vtd_reg_dmar_root(uint64_t addr, bool scalable);
void glue_vtd_reg_ir_root(uint64_t addr, uint32_t size);
void glue_vtd_reg_write_gcmd(uint32_t status, uint32_t val);
void glue_vtd_reg_write_fectl(uint32_t value);
void glue_vtd_reg_write_iectl(uint32_t value);
void glue_vtd_reg_ics_clear_ip(void);
void glue_vtd_dmar_translate(uint8_t bus, uint8_t slot, uint8_t func, uint64_t iova, uint64_t gpa, uint64_t mask);
void glue_vtd_dmar_enable(bool en);
void glue_vtd_dmar_fault(uint16_t sid, int fault, uint64_t addr, bool is_write);
void glue_vtd_ir_enable(bool en);
void glue_vtd_ir_irte_get(int index, uint64_t lo, uint64_t hi);
void glue_vtd_ir_remap(int index, int tri, int vec, int deliver, uint32_t dest, int dest_mode);
void glue_vtd_ir_remap_type(const char *type);
void glue_vtd_ir_remap_msi(uint64_t addr, uint64_t data, uint64_t addr2, uint64_t data2);
void glue_vtd_ir_remap_msi_req(uint64_t addr, uint64_t data);
void glue_vtd_fsts_ppf(bool set);
void glue_vtd_fsts_clear_ip(void);
void glue_vtd_frr_new(int index, uint64_t hi, uint64_t lo);
void glue_vtd_warn_invalid_qi_tail(uint16_t tail);
void glue_vtd_warn_ir_vector(uint16_t sid, int index, int vec, int target);
void glue_vtd_warn_ir_trigger(uint16_t sid, int index, int trig, int target);
void glue_amdvi_evntlog_fail(uint64_t addr, uint32_t head);
void glue_amdvi_cache_update(uint16_t domid, uint8_t bus, uint8_t slot, uint8_t func, uint64_t gpa, uint64_t txaddr);
void glue_amdvi_completion_wait_fail(uint64_t addr);
void glue_amdvi_mmio_write(const char *reg, uint64_t addr, unsigned size, uint64_t val, uint64_t offset);
void glue_amdvi_mmio_read(const char *reg, uint64_t addr, unsigned size, uint64_t offset);
void glue_amdvi_mmio_read_invalid(int max, uint64_t addr, unsigned size);
void glue_amdvi_command_error(uint64_t status);
void glue_amdvi_command_read_fail(uint64_t addr, uint32_t head);
void glue_amdvi_command_exec(uint32_t head, uint32_t tail, uint64_t buf);
void glue_amdvi_unhandled_command(uint8_t type);
void glue_amdvi_intr_inval(void);
void glue_amdvi_iotlb_inval(void);
void glue_amdvi_prefetch_pages(void);
void glue_amdvi_pages_inval(uint16_t domid);
void glue_amdvi_all_inval(void);
void glue_amdvi_ppr_exec(void);
void glue_amdvi_devtab_inval(uint8_t bus, uint8_t slot, uint8_t func);
void glue_amdvi_completion_wait(uint64_t addr, uint64_t data);
void glue_amdvi_control_status(uint64_t val);
void glue_amdvi_iotlb_reset(void);
void glue_amdvi_dte_get_fail(uint64_t addr, uint32_t offset);
void glue_amdvi_invalid_dte(uint64_t addr);
void glue_amdvi_get_pte_hwerror(uint64_t addr);
void glue_amdvi_mode_invalid(uint8_t level, uint64_t addr);
void glue_amdvi_page_fault(uint64_t addr);
void glue_amdvi_iotlb_hit(uint8_t bus, uint8_t slot, uint8_t func, uint64_t addr, uint64_t txaddr);
void glue_amdvi_translation_result(uint8_t bus, uint8_t slot, uint8_t func, uint64_t addr, uint64_t txaddr);
void glue_amdvi_mem_ir_write_req(uint64_t addr, uint64_t val, uint32_t size);
void glue_amdvi_mem_ir_write(uint64_t addr, uint64_t val);
void glue_amdvi_ir_remap_msi_req(uint64_t addr, uint64_t data, uint8_t devid);
void glue_amdvi_ir_remap_msi(uint64_t addr, uint64_t data, uint64_t addr2, uint64_t data2);
void glue_amdvi_err(const char *str);
void glue_amdvi_ir_irte(uint64_t addr, uint64_t data);
void glue_amdvi_ir_irte_val(uint32_t data);
void glue_amdvi_ir_err(const char *str);
void glue_amdvi_ir_intctl(uint8_t val);
void glue_amdvi_ir_target_abort(const char *str);
void glue_amdvi_ir_delivery_mode(const char *str);
void glue_amdvi_ir_irte_ga_val(uint64_t hi, uint64_t lo);
void glue_vmport_register(unsigned char command, void *func, void *opaque);
void glue_vmport_command(unsigned char command);
void glue_x86_gsi_interrupt(int irqn, int level);
void glue_x86_pic_interrupt(int irqn, int level);
void glue_port92_read(uint8_t val);
void glue_port92_write(uint8_t val);
